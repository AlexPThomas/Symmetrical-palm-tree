{"version":3,"file":"app.component.js","sourceRoot":"","sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,wCAAyC;AACzC,mDAA0C;AAE1C,2DAA+E;AAkB/E,IAAa,YAAY,GAAzB;IAMI,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAL1C,SAAI,GAAG,SAAS,CAAC;QAEjB,yBAAoB,GAAqB,IAAI,mCAAe,EAAE,CAAC;QAC/D,wBAAmB,GAAqB,IAAI,mCAAe,EAAE,CAAC;QAG1D,UAAU,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,IAAkB;YAC5C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9B,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,SAAqC;gBACxF,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACvB,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC;YACjD,CAAC,EACD,KAAK;gBACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC,CAAC,CAAA;QACN,CAAC,EACD,KAAK;YACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB,CAAC,IAAa,EAAG,QAA0B;QAC1D,EAAE,CAAA,CAAC,IAAI,KAAK,MAAM,CAAC,CAAA,CAAC;YAChB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAA;QACxC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;QACxC,CAAC;IACL,CAAC;CAGJ,CAAA;AAhCY,YAAY;IAhBxB,gBAAS,CAAC;QACT,QAAQ,EAAE,QAAQ;QAClB,WAAW,EAAE,8BAA8B;QACzC,SAAS,EAAE,CAAC,0BAAU,CAAC;QACvB,MAAM,EAAE,CAAC;;;;;;;;;aASA,CAAC;KACb,CAAC;qCAQkC,0BAAU;GANjC,YAAY,CAgCxB;AAhCY,oCAAY","sourcesContent":["import { Component} from '@angular/core';\nimport {APIService} from './APIService.js'\n\nimport {SpotifyUser, SpotifyImage, SpotifyPlaylist} from './SpotifyObjects.js';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: 'templates/mainComponent.html',\n    providers: [APIService],\n    styles: [`\n                .selected-left {\n                    background: #7b1fa2;\n                    margin-left:20px;\n                }\n                .selected-right {\n                    background: #7b1fa2;\n                    margin-left:40px !important; \n                }\n            `]\n})\n\nexport class AppComponent  {\n    name = 'Angular';\n    currentUser : SpotifyUser;\n    selectedPlaylistLeft : SpotifyPlaylist = new SpotifyPlaylist();\n    selectPlaylistRight : SpotifyPlaylist = new SpotifyPlaylist();\n\n    constructor(private apiService: APIService){\n        apiService.initialise().then((user : SpotifyUser)=> {\n            this.currentUser = user;\n            console.log(this.currentUser);\n            apiService.getUserPlaylists(this.currentUser.id).then((playlists: {items: SpotifyPlaylist[]})=>{\n                console.log(playlists);\n                this.currentUser.playlists = playlists.items;\n            },\n            error =>{\n                console.log(error);\n            })\n        },\n        error => {\n            console.log(error);\n        });\n    }\n\n    setSelectedPlaylist(side : string,  playlist : SpotifyPlaylist) : void {\n        if(side === 'Left'){\n            this.selectedPlaylistLeft = playlist\n        } else {\n            this.selectPlaylistRight = playlist;\n        }\n    }\n\n\n}\n"]}